.PHONY: build run clean test deps help

# Default target
all: build

# Build the application
build:
	@echo "üî® Building Go WebSocket Chat App..."
	go build -o bin/chat-app main.go
	@echo "‚úÖ Build complete! Binary: bin/chat-app"

# Run the application
run:
	@echo "üöÄ Starting Go WebSocket Chat App..."
	go run main.go

# Install dependencies
deps:
	@echo "üì¶ Installing dependencies..."
	go mod tidy
	go mod download
	@echo "‚úÖ Dependencies installed!"

# Clean build artifacts
clean:
	@echo "üßπ Cleaning build artifacts..."
	rm -rf bin/
	go clean
	@echo "‚úÖ Clean complete!"

# Run tests
test:
	@echo "üß™ Running tests..."
	go test ./...
	@echo "‚úÖ Tests complete!"

# Format code
fmt:
	@echo "üé® Formatting code..."
	go fmt ./...
	@echo "‚úÖ Code formatted!"

# Lint code
lint:
	@echo "üîç Linting code..."
	golangci-lint run
	@echo "‚úÖ Linting complete!"

# Development mode (with hot reload if you have air installed)
dev:
	@echo "üî• Starting in development mode..."
	@if command -v air > /dev/null; then \
		air; \
	else \
		echo "‚ö†Ô∏è  Air not installed. Install with: go install github.com/cosmtrek/air@latest"; \
		go run main.go; \
	fi

# Install development tools
install-tools:
	@echo "üõ†Ô∏è  Installing development tools..."
	go install github.com/cosmtrek/air@latest
	go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
	@echo "‚úÖ Development tools installed!"

# Show help
help:
	@echo "üöÄ Go WebSocket Chat App - Available Commands:"
	@echo ""
	@echo "  build         - Build the application"
	@echo "  run           - Run the application"
	@echo "  deps          - Install dependencies"
	@echo "  clean         - Clean build artifacts"
	@echo "  test          - Run tests"
	@echo "  fmt           - Format code"
	@echo "  lint          - Lint code"
	@echo "  dev           - Run in development mode (with hot reload)"
	@echo "  install-tools - Install development tools"
	@echo "  help          - Show this help message"
	@echo ""
	@echo "Example: make run"
